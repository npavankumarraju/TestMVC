name: Deploy to GitHub Pages

on:
  push:
    branches: [ "main" ]

jobs:
  deploy-to-github-pages:
    # use ubuntu-latest image to run steps on
    runs-on: self-hosted
    permissions:
      contents: write
    steps:
    # sets up .NET Core SDK 6.0
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Checkout
      uses: actions/checkout@v3
    # publishes Blazor project to the release-folder
    - name: Publish .NET Core Project
      run: |
        #readlink -f TestMVCGithub.csproj 
        #cd /home/runner/work/TestMVC/TestMVC
        #ls -l "/home/runner/work/TestMVC/TestMVC/TestMVCGithub"
        dotnet publish "C:/actions-runner/_work/TestMVC/TestMVC/TestMVCGithub.sln" -c Release -o release --nologo
 
    - name: Deploy to IIS
      run: |
        # Get the ID and security principal of the current user account
        $myWindowsID=[System.Security.Principal.WindowsIdentity]::GetCurrent()
        $myWindowsPrincipal=new-object System.Security.Principal.WindowsPrincipal($myWindowsID)
 
        # Get the security principal for the Administrator role
        $adminRole=[System.Security.Principal.WindowsBuiltInRole]::Administrator
 
        # Check to see if we are currently running "as Administrator"
        if ($myWindowsPrincipal.IsInRole($adminRole))
          {
          # We are running "as Administrator" - so change the title and background color to indicate this
          $Host.UI.RawUI.WindowTitle = $myInvocation.MyCommand.Definition + "(Elevated)"
          $Host.UI.RawUI.BackgroundColor = "DarkBlue"
          clear-host
          }
        else
          {
          # We are not running "as Administrator" - so relaunch as administrator
   
          # Create a new process object that starts PowerShell
          $newProcess = new-object System.Diagnostics.ProcessStartInfo "PowerShell";
   
          # Specify the current script path and name as a parameter
          $newProcess.Arguments = $myInvocation.MyCommand.Definition;
   
          # Indicate that the process should be elevated
          $newProcess.Verb = "runas";
   
          # Start the new process
          [System.Diagnostics.Process]::Start($newProcess);
   
          # Exit from the current, unelevated, process
          #exit
          }
        echo 'Venkat'
        iisreset /stop
        Copy-Item ./release/* C:/inetpub/wwwroot/ -Recurse -Force
        iisreset /start
